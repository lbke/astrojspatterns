---
export interface Props {
    /**
     * We make the "content" prop optional,
     * because we also allow using a slot
     */
    content?: string;
}
// Get the content prop
// We rename it for clarity, to "contentFromProps"
// If the props is not defined, this will be empty
const { content: contentFromProps } = Astro.props;
// Render the content of the "content" slot
// (if the slot is not defined this will be empty)
const contentFromSlot = await Astro.slots.render("content");

// Using both props and slot is not correct,
// so we warn the developer
if (contentFromProps && contentFromSlot) {
    console.warn(
        `Content is defined both in props and using a slot. 
Prop will be used in priority.`,
    );
}
// We use the "content" value from the prop if it exists
// Otherwise, we use the "content" value from the slot
let finalContent;
if (!!contentFromProps) {
    finalContent = contentFromProps;
} else {
    finalContent = contentFromSlot;
}
---

<div>
    <p set:html={finalContent} />
</div>
